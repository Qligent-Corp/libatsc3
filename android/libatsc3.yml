# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

trigger:
  tags:
    include:
      - 1.*

pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: ARTIFACT_VERSION
    value: 0.0.0

steps:
  - script: | 
      git config --global http.https://$ORGANIZATION@dev.azure.com/$ORGANIZATION/.extraheader "AUTHORIZATION: bearer $(System.AccessToken)"
      git lfs install --skip-smudge
      git config --file=.gitmodules submodule.android/sample_app_no_phy/ExoPlayer.url https://$ORGANIZATION@dev.azure.com/$ORGANIZATION/Middleware/_git/ExoPlayer
      git config --file=.gitmodules submodule.saankhyalabs-slsdk.url https://$PAT@dev.azure.com/$ORGANIZATION/Mark%20One%20Phone/_git/saankhyalabs-slsdk
      git config --file=.gitmodules submodule.airwavz_redzone_sdk.url https://$ORGANIZATION@dev.azure.com/$ORGANIZATION/Middleware/_git/airwavz_redzone_sdk
      git config --file=.gitmodules submodule.codornicesrq.url https://$ORGANIZATION@dev.azure.com/$ORGANIZATION/Middleware/_git/codornicesrq
      git config --file=.gitmodules submodule.libdaa.url https://$ORGANIZATION@dev.azure.com/$ORGANIZATION/Middleware/_git/libdaa
      git submodule update --init --recursive
    env: 
      PAT: $(myPat)
      ORGANIZATION: $(organizationName)  

  - powershell: |
      Write-Host "##vso[task.setvariable variable=ARTIFACT_VERSION]$(git describe --tags)"
    displayName: 'Setup ARTIFACT_VERSION from tag'

  - bash:
       echo "y" | sudo $(ANDROID_SDK_ROOT)/tools/bin/sdkmanager --install "ndk;21.0.6113669" --sdk_root=${ANDROID_SDK_ROOT}
    displayName: 'Setup NDK 21.1.6352462'

  - task: MavenAuthenticate@0
    displayName: 'Maven Authenticate'
    inputs:
      artifactsFeeds: middleware

  - task: Gradle@2
    inputs:
      workingDirectory: 'android'
      gradleWrapperFile: 'android/gradlew'
      javaHomeOption: 'JDKVersion'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      tasks: ':atsc3_core:build :atsc3_bridge:build :atsc3_phy_virtual:build :atsc3_phy_lowasis:build :atsc3_phy_saankhya:build :atsc3_core:publish :atsc3_bridge:publish :atsc3_phy_virtual:publish :atsc3_phy_lowasis:publish :atsc3_phy_saankhya:publish -PartifactVersion=$(ARTIFACT_VERSION)'

    displayName: gradlew build

  - task: CopyFiles@2
    displayName: 'Copy .aar files to artifact staging directory'
    inputs:
      SourceFolder: '$(system.defaultworkingdirectory)'
      Contents: '**/*.aar'
      TargetFolder: '$(build.artifactstagingdirectory)'
    condition: succeededOrFailed()

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
    condition: succeededOrFailed()
